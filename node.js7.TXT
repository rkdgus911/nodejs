。mongoose
몽고디비를 사용하면 하나의 컬렉션 안에 똑같은 속성을 가진 문서 객체를 반복적으로 넣어
둔다면 데이터를 조회할 때도 어떤 속성들이 들어 있는지 미리 알고 있는 상태에서 조회할 수
있습니다. 따라서 관계형 데이터베이스처럼 테이블이나 엑셀 시트처럼 쉽게 다룰 수 있게 되는데
이를 제공하는 모듈이 몽구스입니다.

。오브젝터 맵퍼(Object Mapper)
자바스크립트 객체와 데이터베이스 객체를 서로 매칭하여 바꿀 수 있게 합니다.

。메소드
connect() : mongoose를 사용해 데이터베이스를 연결합니다.
model() : 모델을 정의합니다.
Schema() : 스키마를 정의하는 생성자입니다.

* Promise
프로미스는 자바스크립트 비동기 처리에 사용되는 객체입니다. 자바스크립트의 비동기 처리란 특정 
코드의 실행이 완료될 떄까지 기다리지 않고 다음 코드를 먼저 수행하는 자바스크립트의 특성입니다.
프로미스는 주로 서버 및 DB에서 받아온 데이터를 화면에 표시할 때 사용합니다. (데이터를 받아오기
전에 마치 데이터를 다 받아온 것처럼 화면에 데이터를 표시하려면 오류가 발생 또는 빈 화면이 뜨게
되는데 이를 해결하기 위한 방법입니다.)

useNewUrlParser : 몽고디비에 PORT를 사용하여 데이터를 넣을 수 있습니다.
useUnifiedTopology : 필드를 생성해서 데이터를 넣을 수 있습니다.

static() : 모델 객체에서 사용할 수 있는 함수를 등록합니다. 함수의 이름과 함수 객체를 파라미터로
전달합니다.
method() : 모델 인스턴스 객체에서 사용할 수 있는 함수를 등록합니다. 함수의 이름과 함수 객체를
파라미터로 전달합니다.

router.route('/member/regist').get((req, res) => {
	...
	method="post", action=/member/regist

	or

	<form method="post" action=""> -> get으로 처음 접속했을 때 해당 페이지를 다시 로드하는데 이때 post로 받아옴
});

router.route('/member/regist').post((req, res) => {
	처리하는 페이지
});



